##
## Copyright (c) 2012 The ANTLR Project. All rights reserved.
## Use of this file is governed by the BSD-3-Clause license that
## can be found in the LICENSE.txt file in the project root.
##

##
## Author: Sam Harwell
##

##
## Templates for testing property evaluation
##
PropertyEval0.sample.template=foo
PropertyEval1.sample.template=<PropertyEval0.sample>
PropertyEval2.sample=foo
PropertyEval3.sample.template=<PropertyEval2.sample>
PropertyEval4.sample.template=<PropertyEval3.sample>
PropertyEval5.sample.template=<{f},{oo}:{t,t2|<PropertyEval5.sample2>}>
PropertyEval5.sample2.template=<t><t2>


default.gname=T
default.parser=TParser
default.lexer=TLexer
default.grammar=\
    grammar T;\n\
    @members{\n\
    ##dependent##\n\
    }\n\
    a @init{RuleDependencyChecker.checkDependencies(getClass());} : 'x';\n\
    b @version{1} : 'x';\n\
    X : 'x';
default.dependent.template=\
    <classDeps>\n\
    public static class Dependent {\n\
        <ctorDeps>\n\
        public Dependent() {}\
        <methodDeps>\n\
        public void foo() {}\n\
    }
default.deps.template=\
    <if(rest(deps))><default.multipleDeps><else><first(deps):{dep|<default.singleDep>}><endif>
default.singleDep.template=@RuleDependency(recognizer=<dep.recog>.class, rule=<dep.rule>, version=<dep.version>)
default.multipleDeps.template=\
    @RuleDependencies({\n\
        <deps:{dep|<default.singleDep>}; separator="\\n">\n\
    })


#SingleDependency.inherit=default
# once inheritance works, the following 3 properties are inherited from default
SingleDependency.gname=T
SingleDependency.parser=TParser
SingleDependency.lexer=TLexer
SingleDependency.grammar.template=<default.grammar>
SingleDependency.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=0)
SingleDependency.dependent.template=<{<SingleDependency.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#SingleDependencyFailed.inherit=default
# once inheritance works, the following 3 properties are inherited from default
SingleDependencyFailed.gname=T
SingleDependencyFailed.parser=TParser
SingleDependencyFailed.lexer=TLexer
SingleDependencyFailed.grammar.template=<default.grammar>
SingleDependencyFailed.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1)
SingleDependencyFailed.dependent.template=<{<SingleDependencyFailed.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#MultipleDependencySingleGrammar.inherit=default
# once inheritance works, the following 3 properties are inherited from default
MultipleDependencySingleGrammar.gname=T
MultipleDependencySingleGrammar.parser=TParser
MultipleDependencySingleGrammar.lexer=TLexer
MultipleDependencySingleGrammar.grammar.template=<default.grammar>
MultipleDependencySingleGrammar.deps=@RuleDependencies({\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=0),\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_b, version=1)\n\
    })
MultipleDependencySingleGrammar.dependent.template=<{<MultipleDependencySingleGrammar.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#MultipleDependencySingleGrammarFailed.inherit=default
# once inheritance works, the following 3 properties are inherited from default
MultipleDependencySingleGrammarFailed.gname=T
MultipleDependencySingleGrammarFailed.parser=TParser
MultipleDependencySingleGrammarFailed.lexer=TLexer
MultipleDependencySingleGrammarFailed.grammar.template=<default.grammar>
MultipleDependencySingleGrammarFailed.deps=@RuleDependencies({\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1),\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_b, version=1)\n\
    })
MultipleDependencySingleGrammarFailed.dependent.template=<{<MultipleDependencySingleGrammarFailed.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#MultipleDependencySingleGrammarFailed2.inherit=default
# once inheritance works, the following 3 properties are inherited from default
MultipleDependencySingleGrammarFailed2.gname=T
MultipleDependencySingleGrammarFailed2.parser=TParser
MultipleDependencySingleGrammarFailed2.lexer=TLexer
MultipleDependencySingleGrammarFailed2.grammar.template=<default.grammar>
MultipleDependencySingleGrammarFailed2.deps=@RuleDependencies({\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1),\n\
        @RuleDependency(recognizer=TParser.class, rule=TParser.RULE_b, version=0)\n\
    })
MultipleDependencySingleGrammarFailed2.dependent.template=<{<MultipleDependencySingleGrammarFailed2.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#ClassDependency.inherit=default
# once inheritance works, the following 3 properties are inherited from default
ClassDependency.gname=T
ClassDependency.parser=TParser
ClassDependency.lexer=TLexer
ClassDependency.grammar.template=<default.grammar>
ClassDependency.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=0)
ClassDependency.dependent.template=<{<ClassDependency.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#ClassDependencyFailed.inherit=default
# once inheritance works, the following 3 properties are inherited from default
ClassDependencyFailed.gname=T
ClassDependencyFailed.parser=TParser
ClassDependencyFailed.lexer=TLexer
ClassDependencyFailed.grammar.template=<default.grammar>
ClassDependencyFailed.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1)
ClassDependencyFailed.dependent.template=<{<ClassDependencyFailed.deps>},{},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#MethodDependency.inherit=default
# once inheritance works, the following 3 properties are inherited from default
MethodDependency.gname=T
MethodDependency.parser=TParser
MethodDependency.lexer=TLexer
MethodDependency.grammar.template=<default.grammar>
MethodDependency.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=0)
MethodDependency.dependent.template=<{},{},{<MethodDependency.deps>}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#MethodDependencyFailed.inherit=default
# once inheritance works, the following 3 properties are inherited from default
MethodDependencyFailed.gname=T
MethodDependencyFailed.parser=TParser
MethodDependencyFailed.lexer=TLexer
MethodDependencyFailed.grammar.template=<default.grammar>
MethodDependencyFailed.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1)
MethodDependencyFailed.dependent.template=<{},{},{<MethodDependencyFailed.deps>}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#ConstructorDependency.inherit=default
# once inheritance works, the following 3 properties are inherited from default
ConstructorDependency.gname=T
ConstructorDependency.parser=TParser
ConstructorDependency.lexer=TLexer
ConstructorDependency.grammar.template=<default.grammar>
ConstructorDependency.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=0)
ConstructorDependency.dependent.template=<{},{<ConstructorDependency.deps>},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#ConstructorDependencyFailed.inherit=default
# once inheritance works, the following 3 properties are inherited from default
ConstructorDependencyFailed.gname=T
ConstructorDependencyFailed.parser=TParser
ConstructorDependencyFailed.lexer=TLexer
ConstructorDependencyFailed.grammar.template=<default.grammar>
ConstructorDependencyFailed.deps=@RuleDependency(recognizer=TParser.class, rule=TParser.RULE_a, version=1)
ConstructorDependencyFailed.dependent.template=<{},{<ConstructorDependencyFailed.deps>},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>

#DependencyOnInvalidRule.inherit=default
# once inheritance works, the following 3 properties are inherited from default
DependencyOnInvalidRule.gname=T
DependencyOnInvalidRule.parser=TParser
DependencyOnInvalidRule.lexer=TLexer
DependencyOnInvalidRule.grammar.template=<default.grammar>
DependencyOnInvalidRule.deps=@RuleDependency(recognizer=TParser.class, rule=8, version=0)
DependencyOnInvalidRule.dependent.template=<{},{<DependencyOnInvalidRule.deps>},{}:{classDeps,ctorDeps,methodDeps|<default.dependent>}>
